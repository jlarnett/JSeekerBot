<UserControl x:Class="JSeekerBot.UI.SettingsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:JSeekerBot.UI"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid Background="#FF212121">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="100"></ColumnDefinition>
            <ColumnDefinition Width="250"></ColumnDefinition>
            <ColumnDefinition Width="250"></ColumnDefinition>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="20"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="20"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="auto"></RowDefinition>
            <RowDefinition Height="60"></RowDefinition>
            <RowDefinition Height="40"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="20"></RowDefinition>
        </Grid.RowDefinitions>
          <Grid.Resources>
            <Style x:Key="DarkButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#333"/>
                <Setter Property="Foreground" Value="#EEE"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="BorderBrush" Value="#555"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#444"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#888"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#222"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#AAA"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
                        <Style x:Key="RedButtonStyle" TargetType="Button" BasedOn="{StaticResource DarkButtonStyle}">
                <Setter Property="Background" Value="#C62828"/>      <!-- Dark red -->
                <Setter Property="Foreground" Value="#FFEBEE"/>      <!-- Light reddish text -->
                <Setter Property="BorderBrush" Value="#8E0000"/>     <!-- Darker red border -->
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#E53935"/>  <!-- lighter red on hover -->
                                    <Setter TargetName="border" Property="BorderBrush" Value="#F44336"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#8E0000"/>  <!-- dark red on press -->
                                    <Setter TargetName="border" Property="BorderBrush" Value="#C62828"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="GreenButtonStyle" TargetType="Button" BasedOn="{StaticResource DarkButtonStyle}">
                <Setter Property="Background" Value="#2E7D32"/>      <!-- Dark green -->
                <Setter Property="Foreground" Value="#E0F2F1"/>      <!-- Light greenish text -->
                <Setter Property="BorderBrush" Value="#1B5E20"/>     <!-- Darker green border -->
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Padding" Value="10,6"/>
                <Setter Property="Margin" Value="5"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#388E3C"/>  <!-- lighter green on hover -->
                                    <Setter TargetName="border" Property="BorderBrush" Value="#4CAF50"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#1B5E20"/>  <!-- dark green on press -->
                                    <Setter TargetName="border" Property="BorderBrush" Value="#2E7D32"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
<!-- ComboBox Style -->
<Style x:Key="DarkComboBoxStyle" TargetType="ComboBox">
  <Setter Property="Foreground" Value="#FFDDDDDD"/>
  <Setter Property="Background" Value="#FF2A2A2A"/>
  <Setter Property="BorderBrush" Value="#FF444444"/>
  <Setter Property="BorderThickness" Value="1"/>
  <Setter Property="Padding" Value="0"/>
  <Setter Property="FontSize" Value="16"/>
  <Setter Property="Template">
    <Setter.Value>
      <ControlTemplate TargetType="ComboBox">
        <Grid>
          <ToggleButton x:Name="ToggleButton"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}"
                        Focusable="false"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        ClickMode="Press">
            <ContentPresenter x:Name="ContentSite"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              Margin="0,0,0,0"
                              RecognizesAccessKey="True"
                              TextElement.Foreground="{TemplateBinding Foreground}"/>
          </ToggleButton>

          <Popup x:Name="Popup"
                 Placement="Bottom"
                 IsOpen="{TemplateBinding IsDropDownOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Fade"
                 Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}">
            <Border x:Name="DropDownBorder"
                    Background="#FF2A2A2A"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <ScrollViewer Margin="4,6,4,6"
                            SnapsToDevicePixels="True">
                <ItemsPresenter />
              </ScrollViewer>
            </Border>
          </Popup>
        </Grid>
        <ControlTemplate.Triggers>
          <Trigger Property="HasItems" Value="false">
            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
          </Trigger>
          <Trigger Property="IsEnabled" Value="false">
            <Setter Property="Foreground" Value="#888"/>
          </Trigger>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ToggleButton" Property="BorderBrush" Value="#FF444444"/>
            </Trigger>-->
        </ControlTemplate.Triggers>
      </ControlTemplate>
    </Setter.Value>
  </Setter>

  <!-- Style for the ComboBoxItems inside -->
  <Setter Property="ItemContainerStyle">
    <Setter.Value>
      <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="#FF2A2A2A" />
        <Setter Property="Foreground" Value="#FFDDDDDD" />
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="#FF444444"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="ComboBoxItem">
              <Border x:Name="Bd" 
                      Background="{TemplateBinding Background}" 
                      BorderBrush="{TemplateBinding BorderBrush}"
                      BorderThickness="{TemplateBinding BorderThickness}">
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="Center"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                  <Setter TargetName="Bd" Property="Background" Value="#FF444444"/>
                  <Setter Property="Foreground" Value="#FFFFFFFF"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                  <Setter TargetName="Bd" Property="Background" Value="#FF555555"/>
                  <Setter Property="Foreground" Value="#FFFFFFFF"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                  <Setter Property="Foreground" Value="#888888"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </Setter.Value>
  </Setter>
</Style>


<!-- Style for dropdown items -->
<Style TargetType="ComboBoxItem">
    <Setter Property="Background" Value="#FF2A2A2A"/>
    <Setter Property="Foreground" Value="#FFDDDDDD"/>
    <Setter Property="HorizontalContentAlignment" Value="Center"/>
    <Setter Property="VerticalContentAlignment" Value="Center"/>
    <Setter Property="Padding" Value="4"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="ComboBoxItem">
                <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        SnapsToDevicePixels="True">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      Margin="{TemplateBinding Padding}"
                                      TextElement.Foreground="{TemplateBinding Foreground}" />
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter TargetName="Border" Property="Background" Value="#FF5A9BD5"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter TargetName="Border" Property="Background" Value="#FF3A7BD5"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="#FF777777"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

<!-- Style for the Popup dropdown -->
<Style TargetType="Popup" x:Key="ComboBoxPopupStyle">
    <Setter Property="AllowsTransparency" Value="True"/>
    <Setter Property="PopupAnimation" Value="Fade"/>
    <Setter Property="Placement" Value="Bottom"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="OverridesDefaultStyle" Value="True"/>
    <Setter Property="Focusable" Value="False"/>
    <Setter Property="PopupAnimation" Value="Slide"/>
    <Setter Property="Child">
        <Setter.Value>
            <Border Background="#FF2A2A2A" 
                    BorderBrush="#FF444444" 
                    BorderThickness="1" 
                    CornerRadius="6"
                    Padding="2"
                    SnapsToDevicePixels="True">
                <ScrollViewer CanContentScroll="True" Style="{StaticResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                </ScrollViewer>
            </Border>
        </Setter.Value>
    </Setter>
</Style>

  </Grid.Resources>
<!-- Result Folder Path -->
<TextBlock Grid.Column="1" Grid.Row="1"
           FontSize="20" FontWeight="SemiBold"
           Foreground="#FFB0B0B0"
           VerticalAlignment="Center"
           HorizontalAlignment="Right"
           Margin="0,5">Result Folder Path:</TextBlock>

<Button Grid.Row="1" Grid.Column="2"
        ToolTip="The local folder the output result .xlsx excel document will get saved within. The file will be saved as Applications.xlsx"
        Cursor="Hand"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Background="Transparent"
        BorderThickness="0"
        Padding="0"
        FocusVisualStyle="{x:Null}">

    <Button.Template>
        <ControlTemplate TargetType="Button">
            <Border x:Name="ButtonBorder"
                    Background="Transparent"
                    CornerRadius="8"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    Padding="6">
                <iconPacks:PackIconMaterial x:Name="Icon"
                                            Kind="LightbulbQuestionOutline"
                                            Width="25" Height="25"
                                            Foreground="LawnGreen"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#2200FF00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="YellowGreen"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#3300AA00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="Orange"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Button.Template>
</Button>

<TextBox Grid.Column="3" Grid.Row="1"
         x:Name="ResultPathTextbox"
         Background="#FF2A2A2A"
         Foreground="#FFDDDDDD"
         FontSize="16"
         Padding="8"
         BorderBrush="#FF444444"
         BorderThickness="1"
         VerticalAlignment="Center"
         TextAlignment="Center"

         Margin="0,5">C:/Path</TextBox>

<Button Grid.Column="4" Grid.Row="1" Grid.ColumnSpan="2"
        Height="30"
        Margin="20,5,0,5"
        VerticalAlignment="Center"
        FontSize="16"
        FontWeight="SemiBold"
        Click="Button_Click"
        Foreground="#FFEEEEEE"
        BorderBrush="#FF555555"
        BorderThickness="1"
        Style="{StaticResource DarkButtonStyle}"
        Cursor="Hand">Select Path</Button>

<!-- Default Textbox Response -->
<TextBlock Grid.Column="1" Grid.Row="2"
           FontSize="20" FontWeight="SemiBold"
           Foreground="#FFB0B0B0"
           VerticalAlignment="Center"
           HorizontalAlignment="Right"
           Margin="0,5">Default Textbox Response:</TextBlock>

<Button Grid.Row="2" Grid.Column="2"
        ToolTip="The default textbox value when the bot encounters a normal textbox INPUT HTML element and the response interpreter can't find any associated key phrases. Recommended Value 10 (Number of years experience)"
        Cursor="Hand"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Background="Transparent"
        BorderThickness="0"
        Padding="0"
        FocusVisualStyle="{x:Null}">

    <Button.Template>
        <ControlTemplate TargetType="Button">
            <Border x:Name="ButtonBorder"
                    Background="Transparent"
                    CornerRadius="8"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    Padding="6">
                <iconPacks:PackIconMaterial x:Name="Icon"
                                            Kind="LightbulbQuestionOutline"
                                            Width="25" Height="25"
                                            Foreground="LawnGreen"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#2200FF00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="YellowGreen"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#3300AA00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="Orange"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Button.Template>
</Button>

<TextBox Grid.Column="3" Grid.Row="2"
         x:Name="DefaultTextboxAnswer"
         Background="#FF2A2A2A"
         Foreground="#FFDDDDDD"
         FontSize="16"
         Padding="8"
         BorderBrush="#FF444444"
         BorderThickness="1"
         VerticalAlignment="Center"
         TextAlignment="Center"

         Margin="0,5">5</TextBox>

<!-- Default RadioButton Response -->
<TextBlock Grid.Column="1" Grid.Row="3"
           FontSize="20" FontWeight="SemiBold"
           Foreground="#FFB0B0B0"
           VerticalAlignment="Center"
           HorizontalAlignment="Right"
           Margin="0,5">Default RadioButton Response:</TextBlock>

<Button Grid.Row="3" Grid.Column="2"
        ToolTip="The default chosen radio button value when the bot encounters a Yes/No RadioButton HTML element and the response interpreter can't find any associated key phrases. Recommended Value Yes"
        Cursor="Hand"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Background="Transparent"
        BorderThickness="0"
        Padding="0"
        FocusVisualStyle="{x:Null}">

    <Button.Template>
        <ControlTemplate TargetType="Button">
            <Border x:Name="ButtonBorder"
                    Background="Transparent"
                    CornerRadius="8"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    Padding="6">
                <iconPacks:PackIconMaterial x:Name="Icon"
                                            Kind="LightbulbQuestionOutline"
                                            Width="25" Height="25"
                                            Foreground="LawnGreen"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#2200FF00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="YellowGreen"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#3300AA00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="Orange"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Button.Template>
</Button>

<ComboBox Grid.Column="3" Grid.Row="3"
          x:Name="DefaultTRadioButtonAnswer"
          Style="{StaticResource DarkComboBoxStyle}"
          Margin="0,5"
          HorizontalContentAlignment="Center"
          >
    <ComboBoxItem IsSelected="True">Yes</ComboBoxItem>
    <ComboBoxItem>No</ComboBoxItem>
</ComboBox>
<!-- Default ComboBox Index -->
<TextBlock Grid.Column="1" Grid.Row="5"
           FontSize="20" FontWeight="SemiBold"
           Foreground="#FFB0B0B0"
           VerticalAlignment="Center"
           HorizontalAlignment="Right"
           Margin="0,5">Default ComboBox Index:</TextBlock>

<Button Grid.Row="5" Grid.Column="2"
        ToolTip="The default chosen index when the bot encounters a ComboBox HTML element and the response interpreter can't find any associated key phrases. Recommended Value 1"
        Cursor="Hand"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Background="Transparent"
        BorderThickness="0"
        Padding="0"
        FocusVisualStyle="{x:Null}">

    <Button.Template>
        <ControlTemplate TargetType="Button">
            <Border x:Name="ButtonBorder"
                    Background="Transparent"
                    CornerRadius="8"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    Padding="6">
                <iconPacks:PackIconMaterial x:Name="Icon"
                                            Kind="LightbulbQuestionOutline"
                                            Width="25" Height="25"
                                            Foreground="LawnGreen"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#2200FF00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="YellowGreen"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#3300AA00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="Orange"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Button.Template>
</Button>

<TextBox Grid.Column="3" Grid.Row="5"
         x:Name="DefaultComboBoxAnswer"
         Background="#FF2A2A2A"
         Foreground="#FFDDDDDD"
         FontSize="16"
         Padding="8"
         BorderBrush="#FF444444"
         BorderThickness="1"
         VerticalAlignment="Center"
         TextAlignment="Center"

         Margin="0,5">5</TextBox>

<!-- Job Search Role -->
<TextBlock Grid.Column="1" Grid.Row="6"
           FontSize="20" FontWeight="SemiBold"
           Foreground="#FFB0B0B0"
           VerticalAlignment="Center"
           HorizontalAlignment="Right"
           Margin="2,0">Job Search Role:</TextBlock>

<Button Grid.Row="6" Grid.Column="2"
        ToolTip="The job position or role the candidate is seeking"
        Cursor="Hand"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Background="Transparent"
        BorderThickness="0"
        Padding="0"
        FocusVisualStyle="{x:Null}">

    <Button.Template>
        <ControlTemplate TargetType="Button">
            <Border x:Name="ButtonBorder"
                    Background="Transparent"
                    CornerRadius="8"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    Padding="6">
                <iconPacks:PackIconMaterial x:Name="Icon"
                                            Kind="LightbulbQuestionOutline"
                                            Width="25" Height="25"
                                            Foreground="LawnGreen"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#2200FF00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="YellowGreen"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#3300AA00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="Orange"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Button.Template>
</Button>

<TextBox Grid.Column="3" Grid.Row="6"
         x:Name="JobSearchRoleTextbox"
         Background="#FF2A2A2A"
         Foreground="#FFDDDDDD"
         FontSize="16"
         Padding="8"
         BorderBrush="#FF444444"
         BorderThickness="1"
         VerticalAlignment="Center"
         TextAlignment="Center"
         Margin="0,5">Software Developer</TextBox>

<!-- Location -->
<TextBlock Grid.Column="1" Grid.Row="7"
           FontSize="20" FontWeight="SemiBold"
           Foreground="#FFB0B0B0"
           VerticalAlignment="Center"
           HorizontalAlignment="Right"
           Margin="2,0">Location:</TextBlock>

<Button Grid.Row="7" Grid.Column="2"
        ToolTip="The City / State / Region you want the bot to apply for jobs within"
        Cursor="Hand"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        Background="Transparent"
        BorderThickness="0"
        Padding="0"
        FocusVisualStyle="{x:Null}">

    <Button.Template>
        <ControlTemplate TargetType="Button">
            <Border x:Name="ButtonBorder"
                    Background="Transparent"
                    CornerRadius="8"
                    BorderBrush="Gray"
                    BorderThickness="1"
                    Padding="6">
                <iconPacks:PackIconMaterial x:Name="Icon"
                                            Kind="LightbulbQuestionOutline"
                                            Width="25" Height="25"
                                            Foreground="LawnGreen"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#2200FF00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="YellowGreen"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Background" Value="#3300AA00"/>
                    <Setter TargetName="Icon" Property="Foreground" Value="Orange"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Button.Template>
</Button>

<TextBox Grid.Column="3" Grid.Row="7"
         x:Name="JobSearchLocationTextbox"
         Background="#FF2A2A2A"
         Foreground="#FFDDDDDD"
         FontSize="16"
         Padding="8"
         BorderBrush="#FF444444"
         BorderThickness="1"
         VerticalAlignment="Center"
         TextAlignment="Center"
         Margin="0,5">Chicago</TextBox>

<!-- Validation Text -->
<TextBlock Grid.Column="1" Grid.Row="9" Grid.ColumnSpan="4" 
           x:Name="ValidationsText" 
           Foreground="#FFBBBBBB" 
           FontSize="16"
           FontStyle="Italic"
           Margin="0,10,0,0"/>

        <Button Grid.Column="1" Grid.Row="10" Grid.ColumnSpan="7"
                Height="40"
                Margin="0,0,112,0"
                VerticalAlignment="Top"
                FontSize="22"
                Content="Save Settings"
                Click="Button_Click_1"

                Style="{StaticResource GreenButtonStyle}" />
    </Grid>
</UserControl>
